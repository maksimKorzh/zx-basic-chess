05 CLS
10 PRINT AT 0, 9; "ZX BASIC CHESS"
20 PRINT AT 2, 15; "by"
30 PRINT AT 4, 8; "Code Monkey King"
40 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
41 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
42 DATA 13, 10,  8,  9, 11, 12,  9,  8, 10, 13
43 DATA 13,  7,  7,  7,  7,  7,  7,  7,  7, 13
44 DATA 13,  0,  0,  0,  0,  0,  0,  0,  0, 13
45 DATA 13,  0,  0,  0,  0,  0,  0,  0,  0, 13
46 DATA 13,  0,  0,  0,  0,  0,  0,  0,  0, 13
47 DATA 13,  0,  0,  0,  0,  0,  0,  0,  0, 13
48 DATA 13,  1,  1,  1,  1,  1,  1,  1,  1, 13
49 DATA 13,  4,  2,  3,  5,  6,  3,  2,  4, 13
50 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
51 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
55 DIM BOARD(120)
56 LET SIDE=0
60 FOR I=0 TO 119
90 READ BOARD(I)
100 NEXT I

110 DATA 46, 80, 78, 66, 82, 81, 75, 112, 110, 98, 114, 113, 107, 32 REM 32 - ' '; 88 - 'X'
120 DIM PIECES(14)
130 FOR I=0 TO 13
140 READ PIECES(I)
150 NEXT I

155 GOTO 220

160 FOR ROW=0 TO 11
170 FOR COL=0 TO 9
180 PRINT AT ROW+6, COL+11; CHR(PIECES(BOARD(ROW*10+COL)))
190 NEXT COL
200 NEXT ROW
210 RETURN

220 DATA 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1
230 DIM TYPES(12)
240 FOR I=0 TO 12
250 READ TYPES(I)
260 NEXT I

261 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
262 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
263 DATA 13,  0,  0,  0,  0,  0,  0,  0,  0, 13
264 DATA 13,  0,  5,  5,  5,  5,  5,  5,  0, 13
265 DATA 13,  0,  5, 10, 10, 10, 10,  5,  0, 13
266 DATA 13,  0,  5, 10, 20, 20, 10,  5,  0, 13
267 DATA 13,  0,  5, 10, 20, 20, 10,  5,  0, 13
268 DATA 13,  0,  5, 10, 10, 10, 10,  5,  0, 13
269 DATA 13,  0,  5,  5,  5,  5,  5,  5,  0, 13
270 DATA 13,  0,  0,  0,  0,  0,  0,  0,  0, 13
271 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
272 DATA 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
280 DIM PST(120)
290 FOR I=0 TO 119
300 READ PST(I)
310 NEXT I

330 DATA 0, 100, 300, 350, 500, 900, 0, -100, -300, -350, -500, -900, 0
340 DIM WEIGHTS(13)
350 FOR I=0 TO 12
360 READ WEIGHTS(I)
370 NEXT I

379 DATA   0,   0,   0,   0,   0,   0,   0,   0
380 DATA -10, -20,  -9, -11,   0,   0,   0,   0
381 DATA -19, -21,  21,  19,  -8, -12,  12,   8
382 DATA  -9, -11,  11,   9,   0,   0,   0,   0
383 DATA -10,   1,  10,  -1,   0,   0,   0,   0
384 DATA -10,   1,  10,  -1,  -9, -11,  11,   9
385 DATA -10,   1,  10,  -1,  -9, -11,  11,   9
386 DATA  10,  20,   9,  11,   0,   0,   0,   0
387 DATA -19, -21,  21,  19,  -8, -12,  12,   8
388 DATA  -9, -11,  11,   9,   0,   0,   0,   0
389 DATA -10,   1,  10,  -1,   0,   0,   0,   0
390 DATA -10,   1,  10,  -1,  -9, -11,  11,   9
391 DATA -10,   1,  10,  -1,  -9, -11,  11,   9
400 DIM DIRECTIONS(13, 8)
410 FOR P=0 TO 12
420 FOR I=0 TO 7
430 READ DIRECTIONS(P, I)
440 NEXT I
450 NEXT P

460 LET BEST_SCORE = -10000
470 LET BEST_SOURCE = 0
480 LET BEST_TARGET = 0

500 FOR SQUARE=21 TO 98
510 IF BOARD(SQUARE)=13 OR BOARD(SQUARE)=0 THEN CONTINUE FOR
520 PIECE = BOARD(SQUARE)
530 IF ((PIECES(PIECE)&32)=32)=SIDE THEN GOTO 540 ELSE CONTINUE FOR 
540 FOR DIRECTION=0 TO 7
550 IF DIRECTIONS(PIECE, DIRECTION)=0 THEN CONTINUE FOR
555 LET OFFSET = DIRECTIONS(PIECE, DIRECTION)
560 LET TARGET_SQUARE = SQUARE
570 DO
580 TARGET_SQUARE = TARGET_SQUARE + OFFSET
590 CAPTURED_PIECE = BOARD(TARGET_SQUARE)
600 IF CAPTURED_PIECE=13 THEN CONTINUE FOR
601 IF CAPTURED_PIECE <> 0 AND ((PIECES(CAPTURED_PIECE)&32)=32)=SIDE THEN CONTINUE FOR
602 IF (PIECE = 1 OR PIECE=7) AND (OFFSET=9 OR OFFSET=11 OR OFFSET=-9 OR OFFSET=-11) AND CAPTURED_PIECE=0 THEN CONTINUE FOR
603 IF (PIECE = 1 OR PIECE=7) AND (OFFSET=10 OR OFFSET=20 OR OFFSET=-10 OR OFFSET=-20) AND CAPTURED_PIECE<>0 THEN CONTINUE FOR
604 IF PIECE=1 AND OFFSET=-20 AND BOARD(SQUARE-10)<>0 THEN CONTINUE FOR
605 IF PIECE=7 AND OFFSET=20 AND BOARD(SQUARE+10)<>0 THEN CONTINUE FOR
606 IF PIECE=1 AND OFFSET=-20 AND (SQUARE<81 OR SQUARE>88) THEN CONTINUE FOR
607 IF PIECE=7 AND OFFSET=20 AND (SQUARE<31 OR SQUARE>38) THEN CONTINUE FOR

650 BOARD(SQUARE)=0
660 BOARD(TARGET_SQUARE)=PIECE

700 GOSUB 160
705 GOSUB 1000
706 IF SCORE > BEST_SCORE THEN GOTO 707 ELSE GOTO 710
707 BEST_SCORE = SCORE
708 BEST_SOURCE = SQUARE
709 BEST_TARGET = TARGET_SQUARE

710 BOARD(SQUARE)=PIECE
720 BOARD(TARGET_SQUARE)=CAPTURED_PIECE

730 GOSUB 160

760 IF CAPTURED_PIECE <> 0 AND ((PIECES(CAPTURED_PIECE)&32)=32)<>SIDE THEN CONTINUE FOR
770 IF TYPES(PIECE)=1 THEN CONTINUE FOR
780 LOOP 
790 NEXT DIRECTION
800 NEXT SQUARE
900 GOTO 2020

1000 LET SCORE = -1
1005 SCORE = SCORE + 1
1010 FOR S=21 TO 98
1020 IF BOARD(S)=13 OR BOARD(S)=0 THEN CONTINUE FOR
1030 LET P = BOARD(S)
1040 SCORE = SCORE + WEIGHTS(P)
1041 IF PIECES(P)&32 THEN SCORE = SCORE - PST(S) ELSE SCORE = SCORE + PST(S)
1050 NEXT S
1060 IF SIDE=1 THEN SCORE = SCORE * -1 ELSE SCORE=SCORE * 1
1081 PRINT AT 18, 12; "Score: "; SCORE
1090 RETURN

2020 PRINT "      THIS IS THE BEST MOVE!"
2030 BOARD(BEST_TARGET) = BOARD(BEST_SOURCE)
2040 BOARD(BEST_SOURCE) = 0
2045 GOSUB 160